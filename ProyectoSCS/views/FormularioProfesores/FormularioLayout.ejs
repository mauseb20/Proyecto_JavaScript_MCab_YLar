<!DOCTYPE html>
<html>
    <head>
        <title><%=typeof title == 'undefined' ? 'New Sails App' : title%></title>

        <!-- Viewport mobile tag for sensible mobile support -->
        <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">


        <!--
Stylesheets and Preprocessors
==============================

You can always bring in CSS files manually with `<link>` tags, or asynchronously
using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
of Sails' conventional asset pipeline (boilerplate Gruntfile).

By default, stylesheets from your `assets/styles` folder are included
here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
are supported. In production, your styles will be minified and concatenated into
a single file.

To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
For example, here are a few things you could do:

+ Change the order of your CSS files
+ Import stylesheets from other directories
+ Use a different or additional preprocessor, like SASS, SCSS or Stylus
-->

        <!--STYLES-->
        <link rel="stylesheet" href="/styles/bootstrap-theme.css">
        <link rel="stylesheet" href="/styles/bootstrap-theme.min.css">
        <link rel="stylesheet" href="/styles/bootstrap.css">
        <link rel="stylesheet" href="/styles/bootstrap.min.css">
        <link rel="stylesheet" href="/styles/importer.css">
        <!--STYLES END-->
    </head>

    <body>

        <nav class="navbar navbar-default">
            <div class="container-fluid">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="navbar-header">
                    <img class="img-responsive" alt="Brand" src="https://raw.githubusercontent.com/mauseb20/Proyecto_JavaScript_MCab_YLar/master/ProyectoSCS/assets/images/LogoP48.png">

                </div>

                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                    <ul class="nav navbar-nav">
                        <li><a href="#">L-DICC</a></li>
                    </ul>
                    <ul class="nav navbar-nav navbar-right">
                        <li class="dropdown">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Nombre de Usuario X <span class="caret"></span></a>
                            <ul class="dropdown-menu">
                                <li><a href="#">Opciones del usuario</a></li>
                                <li role="separator" class="divider"></li>
                                <li><a href="#">Salir</a></li>
                            </ul>
                        </li>
                    </ul>


                </div><!-- /.navbar-collapse -->
            </div><!-- /.container-fluid -->
        </nav>
        <div class="container">
            <div class="row">
                <div class="col-md-1" align="center">
                    <h1><span class="glyphicon glyphicon-chevron-left"></span></h1>
                </div>
                <div class="col-md-4" align="center">
                    <h1>Formulario Profesores</h1>
                </div>
                <div class="col-md-1" align="center">
                    <h1><span class="glyphicon glyphicon-chevron-right"></span></h1>
                </div>
            </div>
            <br>
            <div class="row">
                <div class="col-md-4">
                    <div class="jumbotron">
                        <ul class="nav nav-pills nav-stacked">
                            <li role="presentation"><a href="/home">Home </a></li>
                            <li role="presentation"><a href="/materias">Materias </a></li>
                            <li role="presentation"><a href="/laboratorios">Laboratorios </a></li>
                            <li role="presentation"><a href="/software">Software </a></li>
                            <li role="presentation"><a href="/sistemasO">Sistemas Operativos </a></li>
                            <li role="presentation" class="active"><a href="/formulario">Formulario Profesores <span class="glyphicon glyphicon-triangle-right"></span></a></li>
                        </ul>
                    </div>
                </div>
                <div class="col-md-8">
                    <%- body %>
                </div>
            </div>
        </div>

        <!--
Client-side Templates
========================

HTML templates are important prerequisites of modern, rich client applications.
To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
that you load these templates client-side.

By default, your Gruntfile is configured to automatically load and precompile
client-side JST templates in your `assets/templates` folder, then
include them here automatically (between TEMPLATES and TEMPLATES END).

To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
For example, here are a few things you could do:

+ Import templates from other directories
+ Use a different template engine (handlebars, jade, dust, etc.)
+ Internationalize your client-side templates using a server-side
stringfile before they're served.
-->

        <!--TEMPLATES-->

        <!--TEMPLATES END-->


        <!--

Client-side Javascript
========================

You can always bring in JS files manually with `script` tags, or asynchronously
on the client using a solution like AMD (RequireJS).  Or, if you like, you can
take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

By default, files in your `assets/js` folder are included here
automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
CoffeeScript (.coffee) are supported. In production, your scripts will be minified
and concatenated into a single file.

To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
For example, here are a few things you could do:

+ Change the order of your scripts
+ Import scripts from other directories
+ Use a different preprocessor, like TypeScript

-->

        <!--SCRIPTS-->
        <script src="/js/dependencies/sails.io.js"></script>
        <script src="/js/jquery.js"></script>
        <script src="/js/bootstrap.js"></script>
        <script src="/js/bootstrap.min.js"></script>
        <script src="/js/dropdown.js"></script>
        <script src="/js/jquery.min.js"></script>
        <script src="/js/npm.js"></script>
        <!--SCRIPTS END-->
    </body>
</html>
